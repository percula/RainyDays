apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlinx-serialization'
apply plugin: "androidx.navigation.safeargs"


android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "dev.percula.rainydays"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        pickFirst 'META-INF/ASL2.0'
        pickFirst 'META-INF/LICENSE'
        pickFirst 'META-INF/NOTICE'
        pickFirst 'META-INF/library_release.kotlin_module'
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions.freeCompilerArgs += ["-Xuse-experimental=kotlinx.serialization.ImplicitReflectionSerializer"]
    }
    androidExtensions {
        experimental = true
    }

    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'
}

dependencies {
    // Architecture components
    def lifecycleVersion = "2.2.0-alpha01"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"
    kapt "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.11.1"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.1.0-alpha07'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.activity:activity-ktx:1.0.0-beta01'
    implementation 'androidx.fragment:fragment-ktx:1.1.0-beta01'
    implementation 'androidx.preference:preference:1.1.0-beta01'

    // Navigation
    def nav_version = "2.1.0-alpha05"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Paging
    implementation 'androidx.paging:paging-runtime-ktx:2.1.0'

    // Room Database
    def room_version = "2.1.0"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version" // For Kotlin use kapt instead of annotationProcessor
    implementation "androidx.room:room-ktx:$room_version"

    // Firebase
//    implementation 'com.google.firebase:firebase-core:17.0.0'

    // Location libraries
    implementation "com.google.android.gms:play-services-location:17.0.0"
    implementation 'com.google.android.libraries.places:places:1.1.0'
    implementation 'com.github.rtchagas:pingplacepicker:1.0.4'

    // Dagger required
    def daggerVersion = "2.23.2"
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    // Dagger optional
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion" // if you use the support libraries
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    // Permissions
    implementation 'com.github.florent37:runtime-permission-kotlin:1.1.0'

    // Networking
    implementation 'com.squareup.retrofit2:retrofit:2.6.0'
    implementation "com.squareup.okhttp3:okhttp:3.14.2"
    implementation("com.squareup.okhttp3:logging-interceptor:3.14.2")
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'

    // JSON<->POJO dependency
    implementation 'com.google.code.gson:gson:2.8.5'

    // Utils
    implementation 'com.github.percula:ktx:2.0.8'
    implementation 'com.github.percula:PreferenceUtils:v1.0-alpha02'
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'com.jakewharton.threetenabp:threetenabp:1.2.1'
    implementation 'com.github.florent37:inline-activity-result-kotlin:1.0.1'

    // UI
    implementation 'com.sdsmdg.harjot:vectormaster:1.1.3'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test:core:1.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

//apply plugin: 'com.google.gms.google-services'